dist: trusty
language: cpp
sudo: true

compiler:
  - gcc
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-5.0
    packages:
      - g++-8
      - clang-5.0
      - lcov
      - ggcov
      - doxygen

before_install:
  #Clone googletest to run unit tests and benchmarks
  - wget -P ./stb https://raw.githubusercontent.com/nothings/stb/master/stb_image.h
  - pip install --upgrade --user git+https://github.com/samiBendou/cpp-coveralls
  - # Combine global build options with OS/compiler-dependent options
  - export CMAKE_OPTIONS= ${ENV_CMAKE_OPTIONS}
  - export CXX_FLAGS= ${ENV_CXX_FLAGS}

install:
  -   if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-5.0" CC="clang-5.0"; fi
  -   if [ "$CXX" = "g++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="g++-8" CC="gcc-8"; fi
  - echo ${PATH}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v

script:

  - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCOVERAGE=1
  - cmake --build .
  - ./IProcessingTest
  #- doxygen -u Doxyfile
  #- doxygen Doxyfile

after_success:
  - sudo ln -sf /usr/bin/gcov-8 /usr/bin/gcov
  # Create lcov report
  - lcov --capture --directory . --output-file coverage.info  --remove '*gtest*'
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
  - lcov --list coverage.info
  # Uploading to CodeCov
  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
notifications:
  email: false